Search.setIndex({"docnames": ["autoapi/cubewalkers/conversions/index", "autoapi/cubewalkers/custom_typing/index", "autoapi/cubewalkers/experiment/index", "autoapi/cubewalkers/index", "autoapi/cubewalkers/initial_conditions/index", "autoapi/cubewalkers/model/index", "autoapi/cubewalkers/parser/index", "autoapi/cubewalkers/simulation/index", "autoapi/cubewalkers/update_schemes/index", "autoapi/index", "examples", "index"], "filenames": ["autoapi/cubewalkers/conversions/index.rst", "autoapi/cubewalkers/custom_typing/index.rst", "autoapi/cubewalkers/experiment/index.rst", "autoapi/cubewalkers/index.rst", "autoapi/cubewalkers/initial_conditions/index.rst", "autoapi/cubewalkers/model/index.rst", "autoapi/cubewalkers/parser/index.rst", "autoapi/cubewalkers/simulation/index.rst", "autoapi/cubewalkers/update_schemes/index.rst", "autoapi/index.rst", "examples.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers.conversions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers.custom_typing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers.experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers.initial_conditions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers.model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers.parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers.simulation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cubewalkers.update_schemes</span></code>", "API Reference", "Examples", "Welcome to the documentation for cubewalkers"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10], "util": [0, 1, 4], "convert": [0, 10], "between": [0, 3, 5, 7], "boolean": [0, 2, 3, 4, 5, 6, 7], "network": [0, 1, 3, 4, 5, 6, 7, 10], "format": [0, 6, 10], "cana2cupylut": 0, "net": 0, "cana": [0, 10], "boolean_network": 0, "booleannetwork": 0, "tupl": [0, 1, 3, 5, 6, 7], "cupi": [0, 1, 3, 4, 5, 6, 7, 8], "ndarrai": [0, 1, 3, 4, 5, 7, 8], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8], "extract": 0, "lookup": [0, 1, 3, 5, 6, 7], "tabl": [0, 1, 3, 5, 6, 7], "input": [0, 2, 3, 5, 6, 7], "list": [0, 3, 4, 5, 6, 7], "from": [0, 2, 3, 5, 6, 7, 10], "compat": 0, "form": [0, 2, 3, 4, 5], "For": [0, 3, 5, 7, 10], "more": 0, "inform": [0, 2, 3], "about": 0, "see": [0, 3, 5, 7], "rionbr": 0, "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8], "import": [0, 10], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8], "merg": [0, 3, 5, 7], "output": [0, 1, 3, 5, 7], "column": [0, 1, 3, 5, 7], "each": [0, 1, 2, 3, 4, 5, 7, 8, 10], "rule": [0, 1, 2, 3, 5, 6, 7, 10], "": [0, 1, 3, 5, 7], "pad": [0, 3, 5, 6, 7], "fals": [0, 3, 5, 6, 7], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "also": 0, "which": [0, 1, 3, 5, 6, 7, 10], "node": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10], "1": [0, 3, 4, 5, 7, 9, 10], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8], "node_rule_from_cana": 0, "boolean_nod": 0, "booleannod": 0, "int2nam": 0, "dict": [0, 4], "int": [0, 1, 3, 4, 5, 6, 7, 8], "str": [0, 2, 3, 4, 5, 6], "none": [0, 3, 5, 6, 7], "transform": 0, "prime": 0, "implic": 0, "lut": 0, "algebra": 0, "option": [0, 1, 2, 3, 4, 5, 6, 7], "dictionari": [0, 4], "id": 0, "kei": [0, 4], "name": [0, 2, 3, 4, 5, 6], "default": [0, 2, 3, 4, 5, 6, 7, 10], "network_rules_from_cana": 0, "bn": 0, "cpp2bnet": 0, "cpp_rule": 0, "c": [0, 2, 3, 6], "bnet": [0, 10], "custom": 1, "packag": 1, "rawkerneltyp": [1, 6, 7, 8], "A": [1, 3, 4, 5, 6, 7], "dummi": [1, 3, 5], "purpos": 1, "It": [1, 10], "repres": 1, "python": 1, "callabl": 1, "cuda": [1, 3, 5, 6, 7], "kernel": [1, 3, 5, 6, 7], "can": [1, 2, 3, 8, 10], "gener": [1, 2, 3, 4, 5, 6, 8, 9], "us": [1, 3, 5, 6, 7, 8, 10], "tool": 1, "parser": [1, 3, 9], "__call__": 1, "grid": 1, "ellipsi": 1, "block": [1, 3, 5, 7], "arg": 1, "ani": [1, 2, 3, 8], "kwarg": [1, 8], "_summary_": 1, "The": [1, 2, 3, 4, 5, 7, 10], "number": [1, 3, 4, 5, 7, 8, 10], "dimens": [1, 3, 5, 7], "thread": [1, 3, 5, 7], "an": [1, 2, 3, 4, 5, 6, 8, 10], "arrai": [1, 3, 4, 5, 7, 8, 10], "argument": 1, "pass": [1, 7, 8], "one": [1, 2, 3, 5, 7], "two": [1, 10], "wai": 1, "order": [1, 3, 4, 5], "present": 1, "here": [1, 10], "input_array_to_upd": 1, "cp": [1, 3, 4, 5, 7, 8], "n": [1, 3, 5, 7, 8], "x": [1, 3, 4, 5, 7, 10], "w": [1, 3, 5, 7, 8], "updat": [1, 2, 3, 5, 6, 7, 8, 10], "update_scheme_mask": 1, "mask": [1, 2, 3, 5, 7, 8], "whose": [1, 3, 4, 5], "entri": [1, 3, 5, 8], "reflect": 1, "probabl": [1, 3, 4, 5, 7], "correspond": [1, 4], "output_array_after_upd": 1, "after": [1, 3, 5, 7], "modifi": [1, 2, 3], "place": 1, "lookup_t": [1, 3, 5, 7], "function": [1, 3, 5], "If": [1, 2, 3, 5, 6, 7], "provid": [1, 3, 5, 7], "i": [1, 2, 3, 4, 5, 6, 7, 8, 10], "case": [1, 3, 5, 6, 7], "must": [1, 3, 5, 7], "base": [1, 3, 5, 7], "have": [1, 3, 5, 6, 7], "intern": [1, 2, 3, 5, 7], "encod": [1, 6, 7], "current_time_step": 1, "current": [1, 3, 5, 8], "time": [1, 2, 3, 5, 6, 7, 10], "step": [1, 2, 3, 6, 7, 10], "simul": [1, 3, 5, 6, 9, 10], "depend": [1, 2, 3, 5, 6, 7], "number_of_nod": 1, "number_of_walk": 1, "walker": [1, 3, 4, 5, 7, 8, 10], "maskfunctiontyp": [1, 3, 5, 7], "protocol": 1, "update_schem": [1, 3, 5, 7, 9, 10], "t": [1, 3, 5, 7, 8], "call": [1, 6], "mai": [1, 2, 3], "scheme": [1, 3, 5, 7], "timestep": [1, 3, 5, 7, 8, 10], "ensembl": [1, 3, 4, 5, 7, 8, 10], "trajectori": [1, 3, 5, 7, 8, 10], "store": [2, 3, 5, 7, 10], "manipul": 2, "experiment": [2, 3, 5, 6], "condit": [2, 3, 4, 5, 6], "override_str": [2, 3], "comment_char": [2, 3, 4, 5, 6], "user": [2, 3], "specifi": [2, 3, 5, 6, 10], "incorpor": [2, 3, 5, 6], "line": [2, 3, 4, 5, 6], "should": [2, 3, 4, 5, 6, 7], "follow": [2, 3], "nodenam": [2, 3, 4, 5], "starttim": [2, 3], "endtim": [2, 3], "ruletosubstitut": [2, 3], "parentnam": [2, 3], "end": [2, 3], "forc": [2, 3], "e": [2, 3, 10], "becom": [2, 3], "fix": [2, 3, 5, 7], "otherwis": [2, 3, 5, 7], "take": [2, 3], "note": [2, 3, 5], "doe": [2, 3], "make": [2, 3], "differ": [2, 3, 5, 7], "synchron": [2, 3, 5, 7, 8, 10], "control": [2, 3], "made": [2, 3], "perman": [2, 3], "inf": [2, 3], "preced": [2, 3], "replac": [2, 3], "all": [2, 3, 5, 7, 8], "occur": [2, 3], "never": [2, 3], "conflict": [2, 3], "support": [2, 3, 8], "lead": [2, 3], "undefin": [2, 3], "behavior": [2, 3, 7], "empti": [2, 3, 4, 5, 6], "begin": [2, 3, 4, 5, 6], "charact": [2, 3, 4, 5, 6], "ar": [2, 3, 4, 5, 6, 7, 10], "ignor": [2, 3, 4, 5, 6, 7], "new_rul": [2, 3], "old_rul": [2, 3], "time_clamp_str": [2, 3], "varnam": [2, 3], "iter": [2, 3, 5, 6], "string": [2, 3, 6, 10], "determin": [2, 3], "when": [2, 3, 7], "becaus": [2, 3], "variabl": [2, 3, 4, 5, 6, 10], "system": [2, 3], "interper": [2, 3], "express": [2, 3], "evalu": [2, 3], "true": [2, 3, 5, 6, 7, 10], "perform": [2, 3], "convers": [3, 9], "custom_typ": [3, 5, 6, 7, 8, 9], "experi": [3, 5, 6, 9], "initial_condit": [3, 5, 9], "model": [3, 7, 9, 10], "node_regul": [3, 5, 6], "lookup_table_varnam": [3, 5], "initial_bias": [3, 4, 5], "model_nam": [3, 5], "n_time_step": [3, 5, 10], "n_walker": [3, 4, 5, 10], "well": [3, 5], "result": [3, 5, 7, 10], "skip_clean": [3, 5, 6], "assum": [3, 5, 6], "been": [3, 5, 6], "clean": [3, 5, 6], "both": [3, 5], "instead": [3, 4, 5, 7], "indici": [3, 4, 5, 6], "regul": [3, 5, 6], "neg": [3, 5, 6], "associ": [3, 5], "x0": [3, 5], "x1": [3, 5], "etc": [3, 5], "construct": [3, 5, 6], "bia": [3, 4, 5], "where": [3, 4, 5], "initi": [3, 4, 5, 6, 7], "0": [3, 4, 5, 7], "given": [3, 4, 5], "5": [3, 4, 5, 7, 10], "object": [3, 5, 6], "implement": [3, 5], "In": [3, 5, 6], "initialize_walk": [3, 5], "data": [3, 5], "modul": [3, 11], "detail": [3, 5, 7], "simulate_ensembl": [3, 5, 7, 10], "t_window": [3, 5, 7, 10], "averages_onli": [3, 5, 7, 10], "bool": [3, 5, 6, 7], "maskfunct": [3, 5, 7, 10], "threads_per_block": [3, 5, 7], "32": [3, 5, 7], "set_update_prob": [3, 5, 7], "float": [3, 5, 7], "random": [3, 5, 7, 8], "point": [3, 5, 7, 10], "keep": [3, 5, 7, 10], "onli": [3, 5, 7, 10], "averag": [3, 5, 7, 10], "By": [3, 5, 7], "select": [3, 5, 7, 8], "exampl": [3, 5, 7, 11], "how": [3, 5, 7, 10], "mani": [3, 5, 7], "document": [3, 5, 7, 9], "trajectory_vari": [3, 5], "initial_st": [3, 5, 7], "bool_": [3, 5], "asynchron": [3, 5, 8, 10], "varianc": [3, 5], "state": [3, 4, 5, 7], "covari": [3, 5], "zero": [3, 5], "Will": [3, 5], "cast": [3, 5], "other": [3, 5, 7], "dtype": [3, 5], "itself": [3, 5], "estim": [3, 5, 7], "impact": [3, 5, 7], "dynamical_impact": [3, 5, 7], "source_var": [3, 5], "comput": [3, 5, 6, 7], "dynam": [3, 5, 7], "index": [3, 5, 7, 11], "includ": [3, 5, 6], "find": [3, 5], "unperturb": [3, 5, 7], "n_variabl": [3, 4, 5, 10], "refer": [3, 5, 11], "vardict": [3, 4, 5], "member": [3, 5], "alwai": [3, 5], "maxim": [3, 5], "minim": [3, 5], "source_quasicoher": [3, 5, 7], "t_sampl": [3, 5, 7], "fuzzy_coher": [3, 5, 7], "quasicoher": [3, 5, 7], "respons": [3, 5, 7], "perturb": [3, 5, 7], "coher": [3, 5], "respect": [3, 5], "trajectroi": [3, 5, 7], "mark": [3, 5, 7], "either": [3, 5, 7], "agreement": [3, 5, 7], "whether": [3, 5, 6, 7], "absolut": [3, 5, 7], "vector": [3, 5, 7], "singl": [3, 5, 7, 8], "cupewalk": [3, 5, 7], "source_final_hamming_dist": [3, 5, 7], "final": [3, 5, 7], "ham": [3, 5, 7], "distanc": [3, 5, 7], "final_hamming_dist": [3, 5], "derrida_coeffici": [3, 5, 7], "derrida": [3, 5, 7], "coeffici": [3, 5, 7], "coeffic": [3, 5, 7], "mean": [3, 5, 7], "analog": [3, 5, 7], "__version__": 3, "4": 3, "initial_walker_st": 4, "describ": 4, "primari": 5, "access": 5, "attribut": 5, "method": 6, "clean_rul": 6, "pars": 6, "standard": 6, "reformat": 6, "version": [6, 10], "adjust_rules_for_experi": 6, "helper": 6, "adjust": 6, "do": 6, "noth": [6, 7], "new": 6, "modif": 6, "accord": 6, "bnet2rawkernel": 6, "kernel_nam": 6, "rawkernel": [6, 7], "skip": 6, "evolut": 6, "bodi": 6, "regulators2lutkernel": 6, "name_adjust": 6, "fit": 6, "proper": 6, "origin": 6, "class": 7, "randomli": [7, 8], "being": 7, "set": [7, 8], "simulate_perturb": 7, "effect": 7, "sum": 7, "up": 7, "3": [7, 10], "possibl": 7, "variou": [7, 10], "summari": 7, "statist": 7, "indic": 7, "traju": 7, "without": 7, "trajp": 7, "diff": 7, "quantifi": [7, 10], "same": [7, 8], "long": 7, "term": 7, "fuzzi": 7, "similar": 7, "measur": 7, "slide": 7, "scale": 7, "rather": 7, "than": 7, "further": [7, 10], "prx": 7, "life": 7, "023009": 7, "http": 7, "doi": 7, "org": 7, "10": [7, 10], "1103": 7, "prxlife": 7, "asymptot": 7, "calcul": 7, "dure": 7, "target": 7, "asynchronous_kernel": 8, "asynchronous_pbn": 8, "pbn": 8, "independ": [8, 10], "asynchronous_set": 8, "asynchronous_set_pbn": 8, "asynchronous_set_pbn_depend": 8, "synchronous_pbn": 8, "indep": 8, "synchronous_pbn_depend": 8, "page": [9, 11], "auto": 9, "cubewalk": [9, 10], "creat": 9, "sphinx": 9, "autoapi": 9, "basic": 10, "usag": 10, "get": 10, "you": 10, "start": 10, "run": 10, "cw": 10, "defin": 10, "accept": 10, "y": 10, "z": 10, "equival": 10, "altern": 10, "text": 10, "file": 10, "g": 10, "open": 10, "path": 10, "f": 10, "read": 10, "25": 10, "print": 10, "again": 10, "last": 10, "2": 10, "track": 10, "memori": 10, "effici": 10, "larg": 10, "overwritten": 10, "now": 10, "across": 10, "addit": 10, "found": 10, "notebook": 10, "tutori": 10, "folder": 10, "github": 10, "repositori": 10, "ipynb": 10, "show": 10, "simpl": 10, "plot": 10, "influenzatest": 10, "give": 10, "demonstr": 10, "stochast": 10, "variat": 10, "our": 10, "analysi": 10, "respositori": 10, "we": 10, "conduct": 10, "depth": 10, "cell": 10, "collect": 10, "api": 11, "search": 11}, "objects": {"": [[3, 0, 0, "-", "cubewalkers"]], "cubewalkers": [[3, 1, 1, "", "Experiment"], [3, 1, 1, "", "Model"], [3, 3, 1, "", "__version__"], [0, 0, 0, "-", "conversions"], [1, 0, 0, "-", "custom_typing"], [2, 0, 0, "-", "experiment"], [4, 0, 0, "-", "initial_conditions"], [5, 0, 0, "-", "model"], [6, 0, 0, "-", "parser"], [7, 0, 0, "-", "simulation"], [8, 0, 0, "-", "update_schemes"]], "cubewalkers.Experiment": [[3, 2, 1, "", "new_rule"], [3, 2, 1, "", "time_clamp_string"]], "cubewalkers.Model": [[3, 2, 1, "", "derrida_coefficient"], [3, 2, 1, "", "dynamical_impact"], [3, 2, 1, "", "final_hamming_distance"], [3, 2, 1, "", "initialize_walkers"], [3, 2, 1, "", "quasicoherence"], [3, 2, 1, "", "simulate_ensemble"], [3, 2, 1, "", "source_final_hamming_distance"], [3, 2, 1, "", "source_quasicoherence"], [3, 2, 1, "", "trajectory_variance"]], "cubewalkers.conversions": [[0, 4, 1, "", "cana2cupyLUT"], [0, 4, 1, "", "cpp2bnet"], [0, 4, 1, "", "network_rules_from_cana"], [0, 4, 1, "", "node_rule_from_cana"]], "cubewalkers.custom_typing": [[1, 1, 1, "", "MaskFunctionType"], [1, 1, 1, "", "RawKernelType"]], "cubewalkers.custom_typing.MaskFunctionType": [[1, 2, 1, "", "__call__"]], "cubewalkers.custom_typing.RawKernelType": [[1, 2, 1, "", "__call__"]], "cubewalkers.experiment": [[2, 1, 1, "", "Experiment"]], "cubewalkers.experiment.Experiment": [[2, 2, 1, "", "new_rule"], [2, 2, 1, "", "time_clamp_string"]], "cubewalkers.initial_conditions": [[4, 4, 1, "", "initial_walker_states"]], "cubewalkers.model": [[5, 1, 1, "", "Model"]], "cubewalkers.model.Model": [[5, 2, 1, "", "derrida_coefficient"], [5, 2, 1, "", "dynamical_impact"], [5, 2, 1, "", "final_hamming_distance"], [5, 2, 1, "", "initialize_walkers"], [5, 2, 1, "", "quasicoherence"], [5, 2, 1, "", "simulate_ensemble"], [5, 2, 1, "", "source_final_hamming_distance"], [5, 2, 1, "", "source_quasicoherence"], [5, 2, 1, "", "trajectory_variance"]], "cubewalkers.parser": [[6, 4, 1, "", "adjust_rules_for_experiment"], [6, 4, 1, "", "bnet2rawkernel"], [6, 4, 1, "", "clean_rules"], [6, 4, 1, "", "name_adjustment"], [6, 4, 1, "", "regulators2lutkernel"]], "cubewalkers.simulation": [[7, 4, 1, "", "derrida_coefficient"], [7, 4, 1, "", "dynamical_impact"], [7, 4, 1, "", "simulate_ensemble"], [7, 4, 1, "", "simulate_perturbation"], [7, 4, 1, "", "source_final_hamming_distance"], [7, 4, 1, "", "source_quasicoherence"]], "cubewalkers.update_schemes": [[8, 4, 1, "", "asynchronous"], [8, 4, 1, "", "asynchronous_PBN"], [8, 3, 1, "", "asynchronous_kernel"], [8, 4, 1, "", "asynchronous_set"], [8, 4, 1, "", "asynchronous_set_PBN"], [8, 4, 1, "", "asynchronous_set_PBN_dependent"], [8, 4, 1, "", "synchronous"], [8, 4, 1, "", "synchronous_PBN"], [8, 4, 1, "", "synchronous_PBN_dependent"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"]}, "titleterms": {"cubewalk": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11], "convers": 0, "modul": [0, 1, 2, 4, 5, 6, 7, 8], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11], "function": [0, 4, 6, 7, 8], "custom_typ": 1, "class": [1, 2, 3, 5], "experi": 2, "submodul": 3, "packag": 3, "attribut": [3, 8], "initial_condit": 4, "model": 5, "parser": 6, "simul": 7, "update_schem": 8, "api": 9, "refer": 9, "exampl": 10, "welcom": 11, "document": 11, "indic": 11, "tabl": 11}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"cubewalkers.conversions": [[0, "module-cubewalkers.conversions"]], "Module Contents": [[0, "module-contents"], [1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"]], "Functions": [[0, "functions"], [4, "functions"], [6, "functions"], [7, "functions"], [8, "functions"]], "cubewalkers.custom_typing": [[1, "module-cubewalkers.custom_typing"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [5, "classes"]], "cubewalkers.experiment": [[2, "module-cubewalkers.experiment"]], "cubewalkers": [[3, "module-cubewalkers"]], "Submodules": [[3, "submodules"]], "Package Contents": [[3, "package-contents"]], "Attributes": [[3, "attributes"], [8, "attributes"]], "cubewalkers.initial_conditions": [[4, "module-cubewalkers.initial_conditions"]], "cubewalkers.model": [[5, "module-cubewalkers.model"]], "cubewalkers.parser": [[6, "module-cubewalkers.parser"]], "cubewalkers.simulation": [[7, "module-cubewalkers.simulation"]], "cubewalkers.update_schemes": [[8, "module-cubewalkers.update_schemes"]], "API Reference": [[9, "api-reference"]], "Examples": [[10, "examples"]], "Welcome to the documentation for cubewalkers": [[11, "welcome-to-the-documentation-for-cubewalkers"]], "Contents:": [[11, null]], "Indices and tables": [[11, "indices-and-tables"]]}, "indexentries": {"cana2cupylut() (in module cubewalkers.conversions)": [[0, "cubewalkers.conversions.cana2cupyLUT"]], "cpp2bnet() (in module cubewalkers.conversions)": [[0, "cubewalkers.conversions.cpp2bnet"]], "cubewalkers.conversions": [[0, "module-cubewalkers.conversions"]], "module": [[0, "module-cubewalkers.conversions"], [1, "module-cubewalkers.custom_typing"], [2, "module-cubewalkers.experiment"], [3, "module-cubewalkers"], [4, "module-cubewalkers.initial_conditions"], [5, "module-cubewalkers.model"], [6, "module-cubewalkers.parser"], [7, "module-cubewalkers.simulation"], [8, "module-cubewalkers.update_schemes"]], "network_rules_from_cana() (in module cubewalkers.conversions)": [[0, "cubewalkers.conversions.network_rules_from_cana"]], "node_rule_from_cana() (in module cubewalkers.conversions)": [[0, "cubewalkers.conversions.node_rule_from_cana"]], "maskfunctiontype (class in cubewalkers.custom_typing)": [[1, "cubewalkers.custom_typing.MaskFunctionType"]], "rawkerneltype (class in cubewalkers.custom_typing)": [[1, "cubewalkers.custom_typing.RawKernelType"]], "__call__() (cubewalkers.custom_typing.maskfunctiontype method)": [[1, "cubewalkers.custom_typing.MaskFunctionType.__call__"]], "__call__() (cubewalkers.custom_typing.rawkerneltype method)": [[1, "cubewalkers.custom_typing.RawKernelType.__call__"]], "cubewalkers.custom_typing": [[1, "module-cubewalkers.custom_typing"]], "experiment (class in cubewalkers.experiment)": [[2, "cubewalkers.experiment.Experiment"]], "cubewalkers.experiment": [[2, "module-cubewalkers.experiment"]], "new_rule() (cubewalkers.experiment.experiment method)": [[2, "cubewalkers.experiment.Experiment.new_rule"]], "time_clamp_string() (cubewalkers.experiment.experiment method)": [[2, "cubewalkers.experiment.Experiment.time_clamp_string"]], "experiment (class in cubewalkers)": [[3, "cubewalkers.Experiment"]], "model (class in cubewalkers)": [[3, "cubewalkers.Model"]], "__version__ (in module cubewalkers)": [[3, "cubewalkers.__version__"]], "cubewalkers": [[3, "module-cubewalkers"]], "derrida_coefficient() (cubewalkers.model method)": [[3, "cubewalkers.Model.derrida_coefficient"]], "dynamical_impact() (cubewalkers.model method)": [[3, "cubewalkers.Model.dynamical_impact"]], "final_hamming_distance() (cubewalkers.model method)": [[3, "cubewalkers.Model.final_hamming_distance"]], "initialize_walkers() (cubewalkers.model method)": [[3, "cubewalkers.Model.initialize_walkers"]], "new_rule() (cubewalkers.experiment method)": [[3, "cubewalkers.Experiment.new_rule"]], "quasicoherence() (cubewalkers.model method)": [[3, "cubewalkers.Model.quasicoherence"]], "simulate_ensemble() (cubewalkers.model method)": [[3, "cubewalkers.Model.simulate_ensemble"]], "source_final_hamming_distance() (cubewalkers.model method)": [[3, "cubewalkers.Model.source_final_hamming_distance"]], "source_quasicoherence() (cubewalkers.model method)": [[3, "cubewalkers.Model.source_quasicoherence"]], "time_clamp_string() (cubewalkers.experiment method)": [[3, "cubewalkers.Experiment.time_clamp_string"]], "trajectory_variance() (cubewalkers.model method)": [[3, "cubewalkers.Model.trajectory_variance"]], "cubewalkers.initial_conditions": [[4, "module-cubewalkers.initial_conditions"]], "initial_walker_states() (in module cubewalkers.initial_conditions)": [[4, "cubewalkers.initial_conditions.initial_walker_states"]], "model (class in cubewalkers.model)": [[5, "cubewalkers.model.Model"]], "cubewalkers.model": [[5, "module-cubewalkers.model"]], "derrida_coefficient() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.derrida_coefficient"]], "dynamical_impact() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.dynamical_impact"]], "final_hamming_distance() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.final_hamming_distance"]], "initialize_walkers() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.initialize_walkers"]], "quasicoherence() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.quasicoherence"]], "simulate_ensemble() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.simulate_ensemble"]], "source_final_hamming_distance() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.source_final_hamming_distance"]], "source_quasicoherence() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.source_quasicoherence"]], "trajectory_variance() (cubewalkers.model.model method)": [[5, "cubewalkers.model.Model.trajectory_variance"]], "adjust_rules_for_experiment() (in module cubewalkers.parser)": [[6, "cubewalkers.parser.adjust_rules_for_experiment"]], "bnet2rawkernel() (in module cubewalkers.parser)": [[6, "cubewalkers.parser.bnet2rawkernel"]], "clean_rules() (in module cubewalkers.parser)": [[6, "cubewalkers.parser.clean_rules"]], "cubewalkers.parser": [[6, "module-cubewalkers.parser"]], "name_adjustment() (in module cubewalkers.parser)": [[6, "cubewalkers.parser.name_adjustment"]], "regulators2lutkernel() (in module cubewalkers.parser)": [[6, "cubewalkers.parser.regulators2lutkernel"]], "cubewalkers.simulation": [[7, "module-cubewalkers.simulation"]], "derrida_coefficient() (in module cubewalkers.simulation)": [[7, "cubewalkers.simulation.derrida_coefficient"]], "dynamical_impact() (in module cubewalkers.simulation)": [[7, "cubewalkers.simulation.dynamical_impact"]], "simulate_ensemble() (in module cubewalkers.simulation)": [[7, "cubewalkers.simulation.simulate_ensemble"]], "simulate_perturbation() (in module cubewalkers.simulation)": [[7, "cubewalkers.simulation.simulate_perturbation"]], "source_final_hamming_distance() (in module cubewalkers.simulation)": [[7, "cubewalkers.simulation.source_final_hamming_distance"]], "source_quasicoherence() (in module cubewalkers.simulation)": [[7, "cubewalkers.simulation.source_quasicoherence"]], "asynchronous() (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.asynchronous"]], "asynchronous_pbn() (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.asynchronous_PBN"]], "asynchronous_kernel (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.asynchronous_kernel"]], "asynchronous_set() (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.asynchronous_set"]], "asynchronous_set_pbn() (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.asynchronous_set_PBN"]], "asynchronous_set_pbn_dependent() (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.asynchronous_set_PBN_dependent"]], "cubewalkers.update_schemes": [[8, "module-cubewalkers.update_schemes"]], "synchronous() (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.synchronous"]], "synchronous_pbn() (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.synchronous_PBN"]], "synchronous_pbn_dependent() (in module cubewalkers.update_schemes)": [[8, "cubewalkers.update_schemes.synchronous_PBN_dependent"]]}})